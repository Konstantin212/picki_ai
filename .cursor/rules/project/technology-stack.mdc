# Technology Stack

> **Rule Chain:**
>
> - For file/folder structure and usage, see [architecture.mdc]
> - For code conventions, see [code-style.mdc]
> - For UI/UX rules, see [design-system.mdc]
> - For workflow and scripts, see [development-workflow.mdc]

## Core Technologies

- **Framework:** Next.js 15 (App Router)
- **Language:** TypeScript (strict mode)
- **UI Library:** React 19
- **Styling:** Tailwind CSS, shadcn/ui, custom design system
- **Database:** Supabase (PostgreSQL)
- **State Management:** TanStack React Query
- **Forms:** React Hook Form + Zod
- **Internationalization:** Next.js 15 built-in i18n (see [internationalization.mdc])
- **Package Manager:** pnpm

## Key Dependencies (Purpose)

- **shadcn/ui, Radix UI, Lucide React:** Modern, accessible UI components and icons
- **TanStack React Query, Axios:** Data fetching, caching, and API communication
- **React Hook Form, Zod:** Form state and validation
- **Supabase Auth/SSR/JS:** Authentication and database access
- **ESLint, Prettier, Husky, lint-staged:** Code quality and automation

## Guidance

- Use the latest stable versions unless otherwise specified in [development-workflow.mdc].
- All tools must be used in accordance with the projectâ€™s [architecture.mdc] and [code-style.mdc].
- For UI and accessibility, always follow [design-system.mdc].

---

**See the referenced rule files for implementation details and best practices.**

- lint-staged 15.5.1

- Husky 9.1.7
- lint-staged 15.5.1
