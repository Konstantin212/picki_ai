# Project Architecture

> **Rule Chain:**
>
> - For code conventions, see [code-style.mdc]
> - For UI/UX rules, see [design-system.mdc]
> - For i18n structure and usage, see [internationalization.mdc]

## File Organization

### App Directory Structure

```
src/
  app/                    # Next.js App Router pages
    [lang]/               # Locale-aware dynamic routes
      layout.tsx          # Root layout with locale context
      page.tsx            # Home page with server-side translations
      not-found.tsx       # 404 page with locale support
      dictionaries.ts     # Server-side translation loader
      login/              # Authentication pages
      signup/             # Registration pages
      profile/            # User profile management
      start/              # Initial setup/onboarding
      recommend/          # AI recommendation interface
      results/            # AI recommendation results
    not-found.tsx         # Global 404 redirect to default locale
    globals.css           # Global styles and CSS custom properties
    favicon.ico           # Site favicon
    auth/                 # Authentication callback and sign-out routes
      callback/           # OAuth callback handler for Supabase auth
      sign-out/           # User logout functionality
    api/                  # API routes for backend functionality
      recommend/          # AI recommendation API endpoints
      test/               # Testing and development API routes
      typescript-errors/  # TypeScript error reporting API
  components/             # Reusable UI components
    ui/                   # Base UI components (shadcn/ui style)
    AuthForm/             # Authentication form component
      index.tsx           # Component implementation
      index.module.scss   # Component styles (if needed)
    Navigation/           # Navigation component
      index.tsx           # Component implementation
      index.module.scss   # Component styles (if needed)
    Button/               # Button component
      index.tsx           # Component implementation
      index.module.scss   # Component styles (if needed)
  hooks/                  # Custom React hooks
  lib/                    # Utility libraries and configurations
  messages/               # i18n translation files (domain-based)
    en/                   # English translations
    de/                   # German translations
    uk/                   # Ukrainian translations
  middleware.ts           # Locale detection and routing middleware
  providers/              # React context providers
```

## Page & Component Patterns

- Each page and component should follow the conventions in [code-style.mdc] and [design-system.mdc].
- All translations and i18n logic must follow [internationalization.mdc].
- **MANDATORY**: Each component must have its own folder with `index.tsx` and optional `index.module.scss`
- Component folder name must match the component name in code
- Use index files for clean imports.
- Separate business logic from UI components.
- Client components must receive translations as props.

## State Management

- Use TanStack React Query for server state (see [technology-stack.mdc]).
- Use React state for local component state.
- Use React Context sparingly for global state.
- No client-side translation loadingâ€”translations are passed as props.

## Authentication

- Use Supabase Auth for user management.
- Secure API routes with authentication middleware.

---

**For all code, style, and i18n rules, see the referenced rule files.**

- Use Supabase Auth for user management
- Implement proper session handling
- Secure API routes with authentication middleware
